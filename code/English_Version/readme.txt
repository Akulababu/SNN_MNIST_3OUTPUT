一.主要的代码：
Indataprocessing.py 是数据预处理代码，用于将数据转换为神经网络可以处理的形式。
gennet.py 是神经网络的定义代码，包括网络的结构和参数。
Trainloop8.py 是训练循环的主要步骤，包括训练、测试和评估。
maintrain.py 是训练循环的入口，用于启动训练过程。

二.权重文件：
final_weights.txt 是训练好的神经网络的权重文件，包括网络的结构和参数。

三.推理代码：
inference.py 是推理代码，用于将训练好的神经网络应用于新数据。
correct_case.txt 是运行推理代码后正确预测的案例文件，包括输入数据和预测结果。

四.纯数学模型验证代码：
verify.py 是纯数学模型的验证代码，只涉及矩阵运算，用于验证神经网络的性能。
verification.txt 是纯数学模型的验证结果文件，包括准确率、损失值等。
verification_differences.txt 是纯数学模型与推理模型在验证集上的不同之处。


其余python文件都是硬件相关的代码，包括脉冲神经网络的硬件实现和验证。

五.结构概述
我的神经网络是先将2,3,4的数据由28x28的图片转换为7x7的图片，然后进行训练的。
第一层是49，隐藏层是24，输出层是3
decay value是0，用gpu进行批样本训练，每批样本训练之前都对神经元进行重置。神经元无任何记忆功能
Threshold是1,1.99,1.99，因为SNNtorch的库代码判断threshold发放原则为大于，我们想要的是大于等于。我发现改库代码后训练会出问题，所以设置成1.99
loss由三个部分组成，分别是spike loss，mem loss
spike loss是交叉熵损失，mem loss是交叉熵损失
对于权重的限制，我使用了权重裁剪，将权重限制在-1和+1的范围内，保持标准化权重，同时严格限制每个神经元最多6个正权重连接，2个负权重连接
30个周期开始实施对隐藏层的剪枝，使每个神经元的总连接数不超过8，50个周期开始实施对输出层的剪枝，使每个神经元的总连接数不超过8
70个周期开始实施对隐藏层的量化，量化为三值，-1，0，+1，30个周期后对输入层开始量化。

目前准确率是79.6%

