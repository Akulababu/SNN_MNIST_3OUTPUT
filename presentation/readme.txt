一.主要的代码：
Indataprocessing.py 是数据预处理代码，用于将数据转换为神经网络可以处理的形式。
gennet.py 是神经网络的定义代码，包括网络的结构和参数。
Trainloop8.py 是训练循环的主要步骤，包括训练、测试和评估。
maintrain.py 是训练循环的入口，用于启动训练过程。

二.权重文件：
final_weights.txt 是训练好的神经网络的权重文件，包括网络的结构和参数。

三.推理代码：
inference.py 是推理代码，用于将训练好的神经网络应用于新数据。
correct_case.txt 是运行推理代码后正确预测的案例文件，包括输入数据和预测结果。

四.纯数学模型验证代码：
verify.py 是纯数学模型的验证代码，只涉及矩阵运算，用于验证神经网络的性能。
verification.txt 是纯数学模型的验证结果文件，包括准确率、损失值等。
verification_differences.txt 是纯数学模型与推理模型在验证集上的不同之处。


其余python文件都是硬件相关的代码，包括脉冲神经网络的硬件实现和验证。

五.结构概述
我的神经网络是先将2,3,4的数据由28x28的图片转换为7x7的图片，量化到0或1，再输入进网络，然后进行训练的。
第一层是49，隐藏层是24，输出层是3
decay value是0，用gpu进行批样本训练，每批样本训练之前都对神经元进行重置。神经元无任何记忆功能
loss由三个部分组成，分别是spike loss，mem loss，contraint loss
spike loss是交叉熵损失，mem loss是交叉熵损失，contraint loss是L1正则化损失
containt loss是用来限制神经元输入连接数的，由于硬件限制，每个神经元最多有6个正权重连接，2个负权重连接
对于权重的限制，我使用了权重裁剪，将权重限制在-1和+1的范围内，在量化前的一个阶段使用了标准化权重，同时严格限制每个
神经元最多6个正权重连接，2个负权重连接
30个周期开始实施对隐藏层的剪枝，使每个神经元的总连接数不超过8，50个周期开始实施对输出层的剪枝，使每个神经元的总连接数不超过8
70个周期开始实施对隐藏层的量化，量化为三值，-1，0，+1，15个周期后对输入层开始量化。量化后该层的学习率降低一半

我的问题是：
1.为什么我的推理结果和纯数学模型的验证结果不一样，纯数学模型准确率68，推理模型准确率80.52到80.75波动。我需要怎么做才能让推理结果和纯数学模型的验证结果一样？如果纯数学模型能达到百分之80的准确率，
那么我的准确率还能提高吗，我需要怎么做？如果达不到，如何才能使纯数学模型结果和推理结果一致，至少百分之80的准确率，我要怎么做？
2.mem loss我用了两次softmax才能达到较高的准确率，我如果使用snntorch官方的mem loss，准确率会下降。如果可以用官方的mem loss的话，
同时还能达到相同的准确率。那么我想要你举一个完整的训练的例子，要求纯数学公式。假如这批训练有3个样本，我去downsample，前向传播，然后计算出一个loss，需要讲出这三部分的loss是怎么算的，
怎么用loss进行反向传播，怎么用loss进行梯度下降，怎么用loss进行参数更新。

为什么要举例子，因为老板要求我的ppt里training的部分需要讲明白训练的过程，输入了什么，怎么downsample，前向传播，计算批样本loss，反向传播，梯度下降，参数更新。


1.80.52到80.75不是问题


